# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# import secret repository CLIENT_SECRET
env:
  CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
  BASE_URL: ${{ secrets.BASE_URL }}
  S3_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
  S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}

jobs:
  # Single deploy job since we're just deploying
  deploy:
    runs-on: ubuntu-latest
    # skip if the commit message contains [skip ci]
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '9.0.x'
      - name: êstup bun
        uses: oven-sh/setup-bun@v2
      - name: Build
        run: |
          dotnet tool restore
          dotnet paket restore
          bun install --cwd oxpecker
          dotnet run build
      # commit the changes
      - name: Commit and push changes
        run: |
          git config --local user.email "fradav@gmail.com"
          git config --local user.name "François-David Collin"
          git fetch origin gh-pages
          git add -A 
          if git diff --cached --quiet; then
          echo "No changes to commit to main."
          else
          git commit -m "[skip ci] Deploy static content"
          git push origin main
          fi
          git checkout gh-pages
          git pull origin gh-pages
          mv public/*.html .
          git rm -f assets/index-*
          rm -f assets/index-*
          mkdir -p assets
          mv public/assets/index-* assets
          git add -f *.html assets/index-*
          if git diff --cached --quiet; then
            echo "No changes to commit to gh-pages."
          else
            git commit -m "Deploy static content/gh-pages"
            git push origin gh-pages
          fi
        